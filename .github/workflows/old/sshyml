name: Deploy Application Via SSH

on:
  push:
    branches: [ master ]

jobs:
  # // JOB 1
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    outputs:
      DEPLOYMENT_MATRIX: ${{ steps.export-deployment-matrix.outputs.DEPLOYMENT_MATRIX }}

    steps:
        - uses: actions/checkout@v3
        - name: Compile CSS and Javascript
          run: |
            npm install
            npm run prod

        - name: Configure PHP 8.0
          uses: shivammathur/setup-php@master
          with:
            php-version: 8.2
            extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml
        
        - name: Composer install
          run: |
            composer install --no-dev --no-interaction --prefer-dist
        # //
        - name: Put all the projet to one file
          env:
            GITHUB_SHA: ${{ github.sha }}
          run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *
        
        - name: Store artifact to app-bluid for distribution
          uses: actions/upload-artifact@v3
          with:
            name: app-build
            path: ${{ github.sha }}.tar.gz

        - name: Export deployment matrix
          id: export-deployment-matrix
          run: |
              delimiter="$(openssl rand -hex 8)"
              JSON="$(cat ./deployment-config.json)"
              echo "DEPLOYMENT_MATRIX<<${delimiter}" >> "${GITHUB_OUTPUT}"
              echo "$JSON" >> "${GITHUB_OUTPUT}"
              echo "${delimiter}" >> "${GITHUB_OUTPUT}"

  # // JOB 2 (Deployement on server)
  prepare-release-on-servers:
    name: "${{ matrix.server.name }}: Prepare release"
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    strategy:
      matrix:
        server: ${{ fromJson(needs.create-deployment-artifacts.outputs.DEPLOYMENT_MATRIX) }}
    
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: app-build
        ## envoie du fichier .tar sur le server

    - name: Upload
      uses: appleboy/scp-action@master
      with:
        host: ${{ matrix.server.ip }}
        username: ${{ matrix.server.username }}
        password: ${{ matrix.server.password }}
        port: ${{ matrix.server.port }}
        source: ${{ github.sha }}.tar.gz
        target: ${{ matrix.server.path }}
        timeout: 7200s